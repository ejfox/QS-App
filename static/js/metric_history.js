// Generated by CoffeeScript 1.3.3
(function() {
  var metricHistory;

  metricHistory = function(json) {
    var historydiv, svgs, timescale;
    historydiv = d3.select("#history");
    console.log("JSAWN", json);
    svgs = historydiv.selectAll("svg").data(_.keys(json)).enter().append("svg").attr("width", 700).attr("height", 100);
    svgs.attr("id", function(d, i) {
      return d;
    });
    timescale = {};
    _.each(json, function(d) {
      var x;
      x = d3.time.scale().domain([new Date(data[data.length - 1].date), new Date(data[0].date)]).rangeRound([0, width]);
      return console.log("deeDAdee", d);
    });
    return svgs.selectAll("rect").data(function(d) {
      return json[d];
    }).enter().append("rect").attr("height", function(d, i) {
      var metric;
      metric = _.keys(d)[1];
      console.log("RECT D", d, metric);
      return d[metric];
    }).attr({
      "width": 20,
      "x": function(d, i) {
        return i * 21;
      }
    });
  };

  $.ajax({
    url: "/metric-history?user=user2",
    cache: false
  }).done(function(json) {
    var metricSeperate, metrics, seperateOutMetric;
    metricSeperate = [];
    seperateOutMetric = function(metricName) {
      var metric;
      metric = metricName;
      metricSeperate[metric] = [];
      return _.each(json, function(el, i) {
        var newrow;
        newrow = {
          "date": el.date
        };
        newrow[metric] = el[metric];
        return metricSeperate[metric].push(newrow);
      });
    };
    metrics = _.keys(json[0]);
    _.each(metrics, function(metric) {
      return seperateOutMetric(metric);
    });
    console.log("MS=>", metricSeperate);
    return metricHistory(metricSeperate);
  });

}).call(this);
